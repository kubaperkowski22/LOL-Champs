// Code generated by moshi-kotlin-codegen. Do not edit.
@file:Suppress("DEPRECATION", "unused", "ClassName", "REDUNDANT_PROJECTION",
    "RedundantExplicitType", "LocalVariableName", "RedundantVisibilityModifier",
    "PLATFORM_CLASS_MAPPED_TO_KOTLIN")

package com.ready.lolchamps.model

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.Types
import com.squareup.moshi.`internal`.Util
import java.lang.NullPointerException
import java.lang.reflect.Constructor
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import kotlin.collections.List
import kotlin.collections.emptySet
import kotlin.jvm.Volatile
import kotlin.text.buildString

public class ChampionInfoJsonAdapter(
  moshi: Moshi
) : JsonAdapter<ChampionInfo>() {
  private val options: JsonReader.Options = JsonReader.Options.of("id", "name", "title", "lore",
      "image", "tags", "skins", "spells", "passive")

  private val stringAdapter: JsonAdapter<String> = moshi.adapter(String::class.java, emptySet(),
      "id")

  private val nullableStringAdapter: JsonAdapter<String?> = moshi.adapter(String::class.java,
      emptySet(), "name")

  private val nullableImageAdapter: JsonAdapter<Image?> = moshi.adapter(Image::class.java,
      emptySet(), "image")

  private val nullableListOfStringAdapter: JsonAdapter<List<String>?> =
      moshi.adapter(Types.newParameterizedType(List::class.java, String::class.java), emptySet(),
      "tags")

  private val nullableListOfSkinAdapter: JsonAdapter<List<ChampionInfo.Skin>?> =
      moshi.adapter(Types.newParameterizedType(List::class.java, ChampionInfo.Skin::class.java),
      emptySet(), "skins")

  private val nullableListOfSpellAdapter: JsonAdapter<List<ChampionInfo.Spell>?> =
      moshi.adapter(Types.newParameterizedType(List::class.java, ChampionInfo.Spell::class.java),
      emptySet(), "spells")

  private val nullablePassiveAdapter: JsonAdapter<ChampionInfo.Passive?> =
      moshi.adapter(ChampionInfo.Passive::class.java, emptySet(), "passive")

  @Volatile
  private var constructorRef: Constructor<ChampionInfo>? = null

  public override fun toString(): String = buildString(34) {
      append("GeneratedJsonAdapter(").append("ChampionInfo").append(')') }

  public override fun fromJson(reader: JsonReader): ChampionInfo {
    var id: String? = null
    var name: String? = null
    var title: String? = null
    var lore: String? = null
    var image: Image? = null
    var tags: List<String>? = null
    var skins: List<ChampionInfo.Skin>? = null
    var spells: List<ChampionInfo.Spell>? = null
    var passive: ChampionInfo.Passive? = null
    var mask0 = -1
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> {
          id = stringAdapter.fromJson(reader) ?: throw Util.unexpectedNull("id", "id", reader)
          // $mask = $mask and (1 shl 0).inv()
          mask0 = mask0 and 0xfffffffe.toInt()
        }
        1 -> {
          name = nullableStringAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 1).inv()
          mask0 = mask0 and 0xfffffffd.toInt()
        }
        2 -> {
          title = nullableStringAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 2).inv()
          mask0 = mask0 and 0xfffffffb.toInt()
        }
        3 -> {
          lore = nullableStringAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 3).inv()
          mask0 = mask0 and 0xfffffff7.toInt()
        }
        4 -> {
          image = nullableImageAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 4).inv()
          mask0 = mask0 and 0xffffffef.toInt()
        }
        5 -> {
          tags = nullableListOfStringAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 5).inv()
          mask0 = mask0 and 0xffffffdf.toInt()
        }
        6 -> {
          skins = nullableListOfSkinAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 6).inv()
          mask0 = mask0 and 0xffffffbf.toInt()
        }
        7 -> {
          spells = nullableListOfSpellAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 7).inv()
          mask0 = mask0 and 0xffffff7f.toInt()
        }
        8 -> {
          passive = nullablePassiveAdapter.fromJson(reader)
          // $mask = $mask and (1 shl 8).inv()
          mask0 = mask0 and 0xfffffeff.toInt()
        }
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    if (mask0 == 0xfffffe00.toInt()) {
      // All parameters with defaults are set, invoke the constructor directly
      return  ChampionInfo(
          id = id as String,
          name = name,
          title = title,
          lore = lore,
          image = image,
          tags = tags,
          skins = skins,
          spells = spells,
          passive = passive
      )
    } else {
      // Reflectively invoke the synthetic defaults constructor
      @Suppress("UNCHECKED_CAST")
      val localConstructor: Constructor<ChampionInfo> = this.constructorRef ?:
          ChampionInfo::class.java.getDeclaredConstructor(String::class.java, String::class.java,
          String::class.java, String::class.java, Image::class.java, List::class.java,
          List::class.java, List::class.java, ChampionInfo.Passive::class.java,
          Int::class.javaPrimitiveType, Util.DEFAULT_CONSTRUCTOR_MARKER).also {
          this.constructorRef = it }
      return localConstructor.newInstance(
          id,
          name,
          title,
          lore,
          image,
          tags,
          skins,
          spells,
          passive,
          mask0,
          /* DefaultConstructorMarker */ null
      )
    }
  }

  public override fun toJson(writer: JsonWriter, value_: ChampionInfo?): Unit {
    if (value_ == null) {
      throw NullPointerException("value_ was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("id")
    stringAdapter.toJson(writer, value_.id)
    writer.name("name")
    nullableStringAdapter.toJson(writer, value_.name)
    writer.name("title")
    nullableStringAdapter.toJson(writer, value_.title)
    writer.name("lore")
    nullableStringAdapter.toJson(writer, value_.lore)
    writer.name("image")
    nullableImageAdapter.toJson(writer, value_.image)
    writer.name("tags")
    nullableListOfStringAdapter.toJson(writer, value_.tags)
    writer.name("skins")
    nullableListOfSkinAdapter.toJson(writer, value_.skins)
    writer.name("spells")
    nullableListOfSpellAdapter.toJson(writer, value_.spells)
    writer.name("passive")
    nullablePassiveAdapter.toJson(writer, value_.passive)
    writer.endObject()
  }
}
