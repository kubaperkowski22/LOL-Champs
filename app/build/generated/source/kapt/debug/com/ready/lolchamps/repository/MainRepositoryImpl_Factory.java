// Generated by Dagger (https://dagger.dev).
package com.ready.lolchamps.repository;

import com.ready.lolchamps.db.ChampionDao;
import com.ready.lolchamps.network.ChampionService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainRepositoryImpl_Factory implements Factory<MainRepositoryImpl> {
  private final Provider<ChampionService> championServiceProvider;

  private final Provider<ChampionDao> championDaoProvider;

  public MainRepositoryImpl_Factory(Provider<ChampionService> championServiceProvider,
      Provider<ChampionDao> championDaoProvider) {
    this.championServiceProvider = championServiceProvider;
    this.championDaoProvider = championDaoProvider;
  }

  @Override
  public MainRepositoryImpl get() {
    return newInstance(championServiceProvider.get(), championDaoProvider.get());
  }

  public static MainRepositoryImpl_Factory create(Provider<ChampionService> championServiceProvider,
      Provider<ChampionDao> championDaoProvider) {
    return new MainRepositoryImpl_Factory(championServiceProvider, championDaoProvider);
  }

  public static MainRepositoryImpl newInstance(ChampionService championService,
      ChampionDao championDao) {
    return new MainRepositoryImpl(championService, championDao);
  }
}
